{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\aleonmer\\\\Desktop\\\\MY - Documents\\\\FRONT-END\\\\ANGULAR\\\\ng-certification\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\aleonmer\\\\Desktop\\\\MY - Documents\\\\FRONT-END\\\\ANGULAR\\\\ng-certification\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { environment } from \"../../../../../../../environments/environment\";\nimport { WEATHER_IMAGES_AVAILABLES } from \"../../../../../../core/constants/weather-images-availables.const\";\nimport { IMAGE_NO_AVAILABLE_PATH } from \"../../../../../../core/constants/weather-images-no-available.const\";\nimport * as i0 from \"@angular/core\";\nexport var ForecastService = /*#__PURE__*/(function () {\n  var ForecastService = /*#__PURE__*/function () {\n    function ForecastService() {\n      _classCallCheck(this, ForecastService);\n\n      this.options = {\n        weekday: \"long\",\n        month: \"short\",\n        day: \"numeric\"\n      };\n      this.getDate();\n    }\n\n    _createClass(ForecastService, [{\n      key: \"getDate\",\n      value: function getDate() {\n        this.today = new Date(new Date(new Date().setHours(0, 0, 0, 0)));\n        this.tomorrow = new Date(new Date().setHours(0, 0, 0, 0));\n        this.tomorrow.setDate(this.today.getDate() + 1);\n        this.topForecast = new Date(new Date().setHours(0, 0, 0, 0));\n        this.topForecast.setDate(this.tomorrow.getDate() + 5);\n      }\n    }, {\n      key: \"getForecastWeather\",\n      value: function getForecastWeather(forecast) {\n        var _this = this;\n\n        var _a;\n\n        return (_a = forecast === null || forecast === void 0 ? void 0 : forecast.daily) === null || _a === void 0 ? void 0 : _a.filter(function (it) {\n          return new Date(new Date((it === null || it === void 0 ? void 0 : it.dt) * 1000).setHours(0, 0, 0, 0)) >= _this.tomorrow && new Date(new Date((it === null || it === void 0 ? void 0 : it.dt) * 1000).setHours(0, 0, 0, 0)) < _this.topForecast;\n        }).map(function (it) {\n          return _this.setInfoAndImage(it);\n        });\n      }\n    }, {\n      key: \"setInfoAndImage\",\n      value: function setInfoAndImage(item) {\n        var _a, _b, _c, _d, _e;\n\n        var image = WEATHER_IMAGES_AVAILABLES.includes((_b = (_a = item === null || item === void 0 ? void 0 : item.weather[0]) === null || _a === void 0 ? void 0 : _a.main) === null || _b === void 0 ? void 0 : _b.toLowerCase()) ? \"\".concat((_c = environment === null || environment === void 0 ? void 0 : environment.apiUrls) === null || _c === void 0 ? void 0 : _c.weatherImages).concat((_e = (_d = item === null || item === void 0 ? void 0 : item.weather[0]) === null || _d === void 0 ? void 0 : _d.main) === null || _e === void 0 ? void 0 : _e.toLowerCase()) : IMAGE_NO_AVAILABLE_PATH;\n        var formatDate = new Date((item === null || item === void 0 ? void 0 : item.dt) * 1000);\n        return Object.assign(Object.assign({}, item), {\n          dt: formatDate.toLocaleDateString(\"en-US\", this.options),\n          imagesWeather: \"\".concat(image, \".png\")\n        });\n      }\n    }]);\n\n    return ForecastService;\n  }();\n\n  ForecastService.ɵfac = function ForecastService_Factory(t) {\n    return new (t || ForecastService)();\n  };\n\n  ForecastService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ForecastService,\n    factory: ForecastService.ɵfac,\n    providedIn: \"root\"\n  });\n  return ForecastService;\n})();","map":null,"metadata":{},"sourceType":"module"}